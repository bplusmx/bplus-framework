# This uses newer and faster docker based build system
sudo: false

language: php

notifications:
  on_success: never
  on_failure: change
  slack:
    rooms:
      - bplusmx:bZQWMVAAxexYiEkXC8h0kYWV#notifications

php:
  - nightly # PHP 7.0
  - 5.6
  - 5.5
  - 5.4

env:
  - WP_PROJECT_TYPE=plugin WP_VERSION=latest WP_MULTISITE=0 WP_TEST_URL=http://localhost:12000 WP_TEST_USER=test WP_TEST_USER_PASS=test SNIFF=1

matrix:
  allow_failures:
    - php: nightly

before_install:
  - if [[ "$SNIFF" == "1" ]]; then export PHPCS_DIR=/tmp/phpcs; fi
  - if [[ "$SNIFF" == "1" ]]; then export SNIFFS_DIR=/tmp/sniffs; fi
  - if [[ "$SNIFF" == "1" ]]; then export PHPCS=$PHPCS_DIR/scripts/phpcs; fi
  # Install PHP CodeSniffer
  #- if [[ "$SNIFF" == "1" ]]; then composer require "squizlabs/php_codesniffer:2.9.0"; fi
  - if [[ "$SNIFF" == "1" ]]; then git clone -b 2.9 --depth 1 https://github.com/squizlabs/PHP_CodeSniffer.git $PHPCS_DIR; fi
  # Install WordPress Coding Standards
  - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git $SNIFFS_DIR; fi
  # Set PHP CodeSniffer install path to WordPress Coding Standards
  - if [[ "$SNIFF" == "1" ]]; then $PHPCS --config-set installed_paths $SNIFFS_DIR; fi
  # Refresh paths
  - if [[ "$SNIFF" == "1" ]]; then phpenv rehash; fi

before_script:
  # Install composer packages before trying to activate themes or plugins
  #- composer require "squizlabs/php_codesniffer:2.9.0"
  # - composer install
  - git clone https://github.com/luisabarca/wordpress-test-template.git wp-tests
  - bash wp-tests/bin/install-wp-tests.sh test root '' localhost $WP_VERSION

script:
  - phantomjs tests/phantom.js
  - if [[ "$SNIFF" == "1" ]]; then $PHPCS --extensions=php --report=summary --standard=./codesniffer.ruleset.xml .; fi
  - phpunit
  #- cd wp-tests/spec && bundle exec rspec test.rb
